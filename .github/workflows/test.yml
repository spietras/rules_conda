name: Running tests

on:
  push:
    # trigger only on main branch
    branches:
      - main
    # trigger only on changes to the following files
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/test.yml"
  pull_request:
    # trigger only on main branch
    branches:
      - main
    # trigger only on changes to the following files
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/test.yml"

# env for all jobs
env:
  BAZEL_CACHE_DIR: ~/.cache/bazel
  # increase this value to manually reset cache
  CACHE_NUMBER: 0

jobs:
  test:
    name: Run tests
    strategy:
      # don't stop all tests if one fails
      fail-fast: false
      matrix:
        # better to use pinned versions here
        config:
          - { os: ubuntu-20.04, shell: bash -l }
          - { os: macos-10.15, shell: bash -l }
          - { os: windows-2019, shell: cmd /C CALL }
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: ${{ matrix.config.shell }} {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup bazelisk
        uses: bazelbuild/setup-bazelisk@v1
        with:
          bazelisk-version: 1.11.0
      - name: Cache bazel
        uses: actions/cache@v2
        with:
          path: ${{ env.BAZEL_CACHE_DIR }}
          key: ${{ runner.os }}-bazel-${{ env.CACHE_NUMBER }}
      - name: Test miniconda with conda
        working-directory: tests/integration/miniconda/conda
        run: bazel test --test_output=all --test_arg=--verbose --test_arg=-rA ...
      - name: Test miniconda with mamba
        working-directory: tests/integration/miniconda/mamba
        run: bazel test --test_output=all --test_arg=--verbose --test_arg=-rA ...
      - name: Test miniforge with conda
        working-directory: tests/integration/miniforge/conda
        run: bazel test --test_output=all --test_arg=--verbose --test_arg=-rA ...
      - name: Test miniforge with mamba
        working-directory: tests/integration/miniforge/mamba
        run: bazel test --test_output=all --test_arg=--verbose --test_arg=-rA ...
