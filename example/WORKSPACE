### RULES_PYTHON ###
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
http_archive(
    name = "rules_python",
    url = "https://github.com/bazelbuild/rules_python/releases/download/0.5.0/rules_python-0.5.0.tar.gz",
    sha256 = "cd6730ed53a002c56ce4e2f396ba3b3be262fd7cb68339f0377a45e8227fe332",
)

### RULES_CONDA ###
# use this instead of http_archive if you cloned the repo and want to use the local version
local_repository(
   name = "rules_conda",
   path = "../",
)

# use this instead of local_repository if you want to use the release version:
# the example here might use latest feature from main branch but not yet available in the release version
# http_archive(
#     name = "rules_conda",
#     sha256 = "c5ad3a077bddff381790d64dd9cc1516b8133c1d695eb3eff4fed04a39dc4522",
#     url = "https://github.com/spietras/rules_conda/releases/download/0.0.6/rules_conda-0.0.6.zip"
# )

load("@rules_conda//:defs.bzl", "conda_create", "load_conda", "register_toolchain")

# download and install conda
load_conda(
    conda_version = "4.10.3",  # optional, defaults to 4.10.3
    install_mamba = False,  # use True to install mamba, which a faster drop-in replacement for conda
    mamba_version = "0.17.0",  # optional, defaults to 0.17.0
    quiet = False,  # use True to hide conda output
)

# create environment with python2
conda_create(
    name = "py2_env",
    timeout = 600,  # each execute action can take up to 600 seconds
    clean = False,  # use True if you want to clean conda cache (less space taken, but slower subsequent builds)
    environment = "@//third_party/conda:py2_environment.yml",  # label pointing to environment.yml file
    quiet = False,  # use True to hide conda output
    use_mamba = False,  # use True to use mamba, which a faster drop-in replacement for conda
)

# create environment with python3
conda_create(
    name = "py3_env",
    timeout = 600,  # each execute action can take up to 600 seconds
    clean = False,  # use True if you want to clean conda cache (less space taken, but slower subsequent builds)
    environment = "@//third_party/conda:py3_environment.yml",  # label pointing to environment.yml file
    quiet = False,  # use True to hide conda output
    use_mamba = False,  # use True to use mamba, which a faster drop-in replacement for conda
)

# register pythons from environment as toolchain
register_toolchain(
    py2_env = "py2_env",  # python2 is optional
    py3_env = "py3_env",
)
