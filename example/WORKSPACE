load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

### RULES_PYTHON ###
http_archive(
    name = "rules_python",
    sha256 = "cd6730ed53a002c56ce4e2f396ba3b3be262fd7cb68339f0377a45e8227fe332",
    url = "https://github.com/bazelbuild/rules_python/releases/download/0.5.0/rules_python-0.5.0.tar.gz",
)

### RULES_CONDA ###
# use this instead of http_archive if you cloned the repo and want to use the local version
local_repository(
    name = "rules_conda",
    path = "../",
)

# use this instead of local_repository if you want to use the release version
# keep in mind that there may be differences between them
#http_archive(
#    name = "rules_conda",
#    sha256 = "9793f86162ec5cfb32a1f1f13f5bf776e2c06b243c4f1ee314b9ec870144220d",
#    url = "https://github.com/spietras/rules_conda/releases/download/0.1.0/rules_conda-0.1.0.zip"
#)

load("@rules_conda//:defs.bzl", "conda_create", "load_conda", "register_toolchain")

# download and install conda
load_conda(quiet = False)

# create environment with python2
conda_create(
    name = "py2_env",  # name of the environment
    environment = "@//third_party/conda:py2_environment.yml",  # label pointing to environment.yml file
    quiet = False,  # use True to hide conda output, default is True
)

# create environment with python3
conda_create(
    name = "py3_env",  # name of the environment
    environment = "@//third_party/conda:py3_environment.yml",  # label pointing to environment.yml file
    quiet = False,  # use True to hide conda output, default is True
)

# register pythons from environment as toolchain
register_toolchain(
    py2_env = "py2_env",  # python2 is optional
    py3_env = "py3_env",
)
